char *metaTabLee_c =
"\n"
"{{={% %}=}}#include <stdio.h>\n"
"#include <string.h>\n"
"#include <stdlib.h>\n"
"#include <memory.h>\n"
"\n"
"#include \"{%&titulo%}.h\"\n"
"\n"
"{%&titulo%}Lee(char *nombreFichero,{%&titulo%}_t *{%&titulo%})\n"
"{\n"
"char buf[2001];\n"
"char *pun,*pun1,*resto,*campo,*label;\n"
"FILE *in = fopen(nombreFichero,\"r\");\n"
"if (!in) return(-1);\n"
"while(1)\n"
"{\n"
"if (!fgets(buf,2000,in))\n"
"         break;\n"
" if (strlen(buf)<3) continue;\n"
" buf[strlen(buf)-1]=0;\n"
" {%&titulo%}LimpiaBuf(buf);\n"
"if (buf[0]=='#')\n"
"         continue;\n"
"resto=buf;\n"
"\n"
" \n"
"//...\n"
"\n"
"\n"
"// Etiquetas\n"
"label=buf;\n"
"pun=memchr(buf,':',strlen(buf));\n"
"if(!pun) continue;\n"
"*pun=0;\n"
"pun++;\n"
"resto=pun;\n"
"{%&titulo%}LimpiaBuf(label); \n"
"{%#tabla%}\n"
"{%#char%}\n"
"// Char {%&name%}\n"
"if (strcmp(label,\"{%&name%}\")==0)\n"
" {\n"
"    {%&titulo%}Trunca(resto,{%&lenChar%});\n"
"    {%&titulo%}LimpiaBuf(resto);\n"
"   strcpy({%&titulo%}->{%&name%},resto);\n"
"   continue;\n"
" }\n"
"{%/char%}{%#list%}\n"
"\n"
"// LISTA {%&name%}\n"
"if (strcmp(label,\"{%&name%}\")==0)\n"
" {\n"
"  int i=0;\n"
"  while(1)\n"
"   {\n"
"    campo=resto;\n"
"    pun=memchr(resto,':',strlen(resto));\n"
"    if(pun) *pun=0;\n"
"    {%&titulo%}Trunca(campo,{%&lenChar%});\n"
"    {%&titulo%}LimpiaBuf(campo);\n"
"    strcpy({%&titulo%}->{%&name%}[i],campo);\n"
"    i++;\n"
"    if (!pun) break; \n"
"    pun++;\n"
"    if (strlen(pun)==0) break;\n"
"    resto=pun;\n"
"   }// end while\n"
"  continue;\n"
" }\n"
"{%/list%}\n"
"\n"
"\n"
"{%#object%}\n"
"// Objeto {%&name%}\n"
"if (strcmp(label,\"{%&name%}\")==0)\n"
" {\n"
"{%#itemObjeto%}\n"
"// Item {%&itemObjeto.name%}\n"
"\n"
"   campo=resto;\n"
"   pun=memchr(resto,':',strlen(resto));\n"
"   if(pun) *pun=0;\n"
"    {%&titulo%}Trunca(campo,{%&itemObjeto.len%});\n"
"    {%&titulo%}LimpiaBuf(campo);\n"
"   strcpy({%&titulo%}->{%&name%}.{%&itemObjeto.name%},campo);\n"
"   if (!pun) continue; \n"
"   pun++;\n"
"   if (strlen(pun)==0) continue;\n"
"   resto=pun;\n"
"{%/itemObjeto%}}{%/object%}{%/tabla%}\n"
"continue;\n"
" }\n"
"\n"
"\n"
"fclose(in);\n"
"return(0);\n"
"}\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"// PROGRAMA DE LECTURA DE LISTA\n"
"\n"
"// usage:\n"
"//        {%&titulo%}_t *{%&titulo%}Lista;\n"
"//       numItems = {%&titulo%}LeeLista(nombreFichero,&{%&titulo%}Lista);\n"
"{%&titulo%}LeeLista(char *nombreFichero,{%&titulo%}_t **{%&titulo%}Lista)\n"
"{\n"
"{%&titulo%}_t {%&titulo%}x;\n"
"{%&titulo%}_t *{%&titulo%}=&{%&titulo%}x;\n"
"int i;\n"
"char buf[20001];\n"
"int numItems=0;\n"
"char *pun,*pun1,*resto,*campo,*label;\n"
"FILE *in = fopen(nombreFichero,\"r\");\n"
"if (!in) return(-1);\n"
"while(1)\n"
"{\n"
"if (!fgets(buf,20000,in))\n"
"         break;\n"
" if (strlen(buf)<3) continue;\n"
" buf[strlen(buf)-1]=0;\n"
" {%&titulo%}LimpiaBuf(buf);\n"
"if (buf[0]=='#')\n"
"         continue;\n"
"resto=buf;\n"
"\n"
" \n"
"//...\n"
"\n"
"\n"
"// Inicia\n"
"resto=buf;\n"
"{%#tabla%}\n"
"{%#list%}\n"
"// LISTA {%&name%}\n"
"for (i=0;i<{%&lenLista%};i++)\n"
" {\n"
"   campo=resto; // esto para chequear el break despues del for\n"
"   if (!resto) break;  \n"
"   campo=resto;\n"
"   pun=memchr(resto,':',strlen(resto));\n"
"   if (pun)\n"
"    {\n"
"     *pun=0;\n"
"     pun++;\n"
"     resto=pun;\n"
"    }\n"
"   else\n"
"    resto=NULL;\n"
"\n"
"   {%&titulo%}Trunca(campo,{%&lenChar%});\n"
"   {%&titulo%}LimpiaBuf(campo);\n"
"   strcpy({%&titulo%}->{%&name%}[i],campo);\n"
" }\n"
"// si hay un break arriba, hay que hacer un continue, pero sino no hay que hacerlo, pues puede ser el ultimo de la linea, uso el campo para eso\n"
"if (!campo) continue;  \n"
"{%/list%}\n"
"{%#char%}\n"
"// Char {%&name%}\n"
"if (!resto) continue;  \n"
"campo=resto;\n"
"pun=memchr(resto,':',strlen(resto));\n"
"if (pun)\n"
" {\n"
"  *pun=0; pun++; resto=pun;\n"
" }\n"
"else\n"
" resto=NULL;\n"
"    {%&titulo%}Trunca(campo,{%lenChar%});\n"
"    {%&titulo%}LimpiaBuf(campo);\n"
"   strcpy({%&titulo%}->{%&name%},campo);\n"
"{%/char%}\n"
"{%#object%}\n"
"// Objeto {%&name%}\n"
"{%#itemObjeto%}\n"
"if (!resto) continue;  \n"
" campo=resto;\n"
" pun=memchr(resto,':',strlen(resto));\n"
" if (pun)\n"
"  { *pun=0; pun++; resto=pun; }\n"
" else resto=NULL;\n"
" {%&titulo%}Trunca(campo,{%&itemObjeto.len%});\n"
" {%&titulo%}LimpiaBuf(campo);\n"
" strcpy({%&titulo%}->{%&name%}.{%&itemObjeto.name%},campo);\n"
"{%/itemObjeto%}\n"
"{%/object%}\n"
"{%/tabla%}\n"
"if (numItems==0) *{%&titulo%}Lista=malloc(sizeof({%&titulo%}_t));\n"
"else *{%&titulo%}Lista=realloc(*{%&titulo%}Lista,(numItems+1)*sizeof({%&titulo%}_t));\n"
"(*{%&titulo%}Lista)[numItems]=*{%&titulo%};\n"
"numItems++;\n"
"continue;\n"
"}\n"
"fclose(in);\n"
"return(numItems);\n"
"}\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"{%&titulo%}Pinta({%&titulo%}_t *{%&titulo%})\n"
"{\n"
"int i;{%#tabla%}{%#list%}\n"
"for (i=0;i<{%&lenLista%};i++)\n"
"  printf(\"{%&name%}[i] = %s\\n\",{%&titulo%}->{%&name%}[i]);{%/list%}{%#char%}\n"
"printf(\"{%&name%} = %s\\n\",{%&titulo%}->{%&name%});{%/char%}{%#object%}{%#itemObjeto%}\n"
"printf(\"{%&name%}.{%&itemObjeto.name%} = %s\\n\",{%&titulo%}->{%&name%}.{%&itemObjeto.name%});{%/itemObjeto%}{%/object%}{%/tabla%}\n"
"}\n"
"\n"
"// Limpieza de buffer personalizado\n"
"{%&titulo%}LimpiaBuf(char *buf)\n"
"{\n"
"return({%&titulo%}LimpiaBuffer(buf,strlen(buf)));\n"
"}\n"
"{%&titulo%}LimpiaBuffer(char *buf,int len)\n"
"{\n"
" int lenp,ret;\n"
" lenp={%&titulo%}quita_espacios_iniciales(buf,len);\n"
" ret={%&titulo%}quita_espacios_finales(buf,lenp);\n"
" return(ret);\n"
"}\n"
"{%&titulo%}quita_espacios_iniciales(char *buf ,int len)\n"
"{\n"
" int i;\n"
" int lenp=0;\n"
" for (i=0;i<len;i++)\n"
"   {\n"
"     if (lenp==0 && buf[i]==' ')\n"
"               continue;\n"
"     buf[lenp]=buf[i];\n"
"     lenp++;\n"
"   }\n"
" for (i=lenp;i<len;i++)\n"
"      buf[i]=0;\n"
" return(lenp);\n"
"}\n"
"{%&titulo%}quita_espacios_finales(char *buf ,int len)\n"
"{\n"
" int i;\n"
" int lenp=len;\n"
" for (i=(len)-1;i>=0;i--)\n"
"   {\n"
"     if (buf[i]==' ')\n"
"     { buf[i]=0;lenp--;}\n"
"     else\n"
"       break;\n"
"   }\n"
" return(lenp);\n"
"}\n"
"\n"
"// buf es terminado en 0 si su longitud es mayor que len, lo trunca\n"
"\n"
"{%&titulo%}Trunca(char *buf,int len)\n"
"{\n"
"if (strlen(buf)>len)\n"
"   buf[len]=0;\n"
"}\n";
